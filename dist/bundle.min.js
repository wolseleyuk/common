!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Common={})}(this,(function(t){"use strict";class e{static get success(){return new e({ok:!0,message:"Completed successfully"}).toObject()}constructor(t){this.ok=t.ok,this.message=t.message}toObject(){return{ok:this.ok,message:this.message}}}class s{constructor(t){this.body=t.data,this.response={body:new ReadableStream(t.data),bodyused:!0,ok:"OK"===t.statusText,redirected:!1,status:t.status,statusText:t.statusText,type:"",url:t.config.url}}toObject(){return{...this}}}const r=require("axios");t.AxiosObject=class{constructor(t){this._config={},Object.assign(this._config,t)}get config(){return this._config}async fetch(){try{const t=await r.request(this._config);return new s(t).toObject()}catch(t){return console.log(t),"Error"}}body(t){return this._config.data=t,this}parameters(t){return this._config.params=t,this}async toUrl(){return`${this._config.baseURL?this._config.baseURL+" ":""}${this._config.url||""}`}},t.AxiosRestResponse=s,t.ObjectResponse=e,t.ProgressMessage=class{static get createOrder(){return"Creating order..."}static addProduct(t){return`Adding ${t}...`}static assignCustomer(t){return`Assigning customer ${t}...`}static get saveOrder(){return"Saving order..."}static get updateQuantity(){return"Updating quantity..."}static get deleteLine(){return"Deleting line..."}static get deleteAllLines(){return"Deleting all lines..."}}}));
//# sourceMappingURL=bundle.min.js.map
